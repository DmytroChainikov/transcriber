import os
import time
import logging
from pathlib import Path
from watchdog.events import FileSystemEventHandler


class AudioFileHandler(FileSystemEventHandler):
    """–û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π —Ñ–∞–π–ª–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –Ω–æ–≤–∏—Ö –∞—É–¥—ñ–æ —Ñ–∞–π–ª—ñ–≤"""
    
    def __init__(self, transcriber, folder, supported_formats, max_file_size, 
                 excel_file=None, excel_output_dir=None, enable_excel=False):
        self.transcriber = transcriber
        self.folder = folder  # –Ñ–¥–∏–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è –∞—É–¥—ñ–æ —Ç–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ñ–≤
        self.supported_formats = [fmt.lower() for fmt in supported_formats]
        self.max_file_size = max_file_size * 1024 * 1024  # –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤ –±–∞–π—Ç–∏
        self.processed_files = set()
        
        # Excel —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è
        self.excel_file = excel_file
        self.excel_output_dir = excel_output_dir
        self.enable_excel = enable_excel and excel_file and os.path.exists(excel_file)
    
    def on_created(self, event):
        """–û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É"""
        if not event.is_directory:
            self.process_audio_file(event.src_path)
    
    def on_moved(self, event):
        """–û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ—ó –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è —Ñ–∞–π–ª—É"""
        if not event.is_directory:
            self.process_audio_file(event.dest_path)
    
    def process_audio_file(self, file_path):
        """
        –û–±—Ä–æ–±–∫–∞ –∞—É–¥—ñ–æ —Ñ–∞–π–ª—É
        
        Args:
            file_path (str): –®–ª—è—Ö –¥–æ –∞—É–¥—ñ–æ —Ñ–∞–π–ª—É
        """
        try:
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É —Ñ–∞–π–ª—É
            file_extension = Path(file_path).suffix.lower()
            if file_extension not in self.supported_formats:
                return
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —â–æ —Ü–µ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü—ñ—ó
            if file_extension == '.txt':
                return
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–∑–º—ñ—Ä—É —Ñ–∞–π–ª—É
            file_size = os.path.getsize(file_path)
            if file_size > self.max_file_size:
                logging.warning(f"–§–∞–π–ª {file_path} –∑–∞–≤–µ–ª–∏–∫–∏–π ({file_size / 1024 / 1024:.1f} MB)")
                return
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ñ–∞–π–ª –≤–∂–µ –±—É–≤ –æ–±—Ä–æ–±–ª–µ–Ω–∏–π
            if file_path in self.processed_files:
                return
                
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –≤–∂–µ —ñ—Å–Ω—É—î
            base_name = Path(file_path).stem
            transcript_file = os.path.join(self.folder, f"{base_name}.txt")
            if os.path.exists(transcript_file):
                logging.info(f"–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –≤–∂–µ —ñ—Å–Ω—É—î –¥–ª—è: {base_name}")
                self.processed_files.add(file_path)
                return
            
            # –î–æ–¥–∞–Ω–Ω—è –Ω–µ–≤–µ–ª–∏–∫–æ—ó –∑–∞—Ç—Ä–∏–º–∫–∏ —â–æ–± —Ñ–∞–π–ª –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–ø–∏—Å–∞–≤—Å—è
            time.sleep(2)
            
            logging.info(f"–û–±—Ä–æ–±–∫–∞ –Ω–æ–≤–æ–≥–æ –∞—É–¥—ñ–æ —Ñ–∞–π–ª—É: {file_path}")
            
            # –í–∏–±–∏—Ä–∞—î–º–æ —Ä–µ–∂–∏–º –æ–±—Ä–æ–±–∫–∏
            if self.enable_excel:
                # –ü–æ–≤–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –∑ Excel —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é
                result = self.transcriber.process_and_update_excel(
                    audio_path=file_path,
                    excel_file_path=self.excel_file,
                    output_dir=self.excel_output_dir or os.path.join(self.folder, 'excel_results')
                )
                
                if result['success']:
                    logging.info(f"‚úÖ –§–∞–π–ª –æ–±—Ä–æ–±–ª–µ–Ω–æ –∑ Excel —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é: {os.path.basename(file_path)}")
                    logging.info(f"   üìã Excel: {result.get('updated_excel_file', 'N/A')}")
                    logging.info(f"   üìç –†—è–¥–æ–∫: {result.get('written_row', 'N/A')}")
                else:
                    logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ Excel –æ–±—Ä–æ–±–∫–∏: {result.get('error', '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞')}")
            else:
                # –ó–≤–∏—á–∞–π–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü—ñ—è
                transcript = self.transcriber.transcribe_audio(file_path)
                
                if transcript:
                    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—É
                    self.transcriber.save_transcript(transcript, transcript_file)
                    logging.info(f"‚úÖ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {os.path.basename(transcript_file)}")
            
            # –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —Å–ø–∏—Å–∫—É –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
            self.processed_files.add(file_path)
            
        except Exception as e:
            logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ —Ñ–∞–π–ª—É {file_path}: {str(e)}")